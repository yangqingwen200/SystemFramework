<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:resources/datasource/jdbc.properties</value>
				<value>classpath:resources/redis/redis.properties</value>
				<value>classpath:resources/config/config.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置Hibernate支持 -->
	<bean id="dataSourceLocal" name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	
      <!-- 指定连接数据库的驱动-->  
        <property name="driverClass" value="${db.driverClassName}"/> 
         
       <!-- 指定连接数据库的URL-->  
       <property name="jdbcUrl" value="${db.url}"/>  
       
       <!-- 指定连接数据库的用户名-->  
      <property name="user" value="${db.username}"/>  
      
       <!-- 指定连接数据库的密码-->  
       <property name="password" value="${db.password}"/> 
        
        <!-- 指定连接池中保留的最大连接数. Default:15-->          
       <property name="maxPoolSize" value="50"/>  
        <!-- 指定连接池中保留的最小连接数-->  
        
       <property name="minPoolSize" value="5"/>  
       <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->       
       <property name="initialPoolSize" value="10"/>  
       
       <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->  
        <property name="maxIdleTime" value="600"/>  
        
       <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->  
        <property name="acquireIncrement" value="5"/>  
        
       <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。  
                       但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->  
        <property name="maxStatements" value="5"/>  
        
       <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->  
        <property name="idleConnectionTestPeriod" value="60"/>  
   </bean>  

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">com.generic.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			 	<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.release_mode">after_statement</prop>
				<prop key="hibernate.validator.apply_to_ddl">false</prop>
				<prop key="hibernate.validator.autoregister_listeners">false</prop>
				
				<!-- 以下配置Oracle ,sql server 支持，mysql不支持 -->
				<!-- hibernate.jdbc.fetch_size 50 //读 -->
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<!-- hibernate.jdbc.batch_size 30 //写 -->
				<prop key="hibernate.jdbc.batch_size">30</prop>
				
			</props>
		</property>
		<property name="packagesToScan">
            <list>
                <value>com</value>
            </list>
        </property>
		
	</bean>

	<!-- TransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="allManagerMethod" expression="execution(* com.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="allManagerMethod" advice-ref="txAdvice" />
	</aop:config>

	<!-- 支持注解(不需要使用bean标签来管理bean了 -->
	<context:annotation-config />
	
	<!-- 扫描注解的包 -->
	<context:component-scan base-package="com" />

	<!-- 支持AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<bean id="daoTemplate" abstract="true" lazy-init="true">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean class="com.generic.context.AppContext"/>
	
    <!-- 备份数据库 -->
   <!--  <import resource="classpath:resources/spring/applicationContextQuartz.xml"/> -->
    <!-- 初始化redis信息 -->
    <import resource="classpath:resources/redis/redis.xml"/>
    <!-- 初始化常量配置 -->
    <import resource="classpath:resources/config/config.xml"/>
</beans>

